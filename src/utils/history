# ALPHA VERSION HISTORY
# ==================
# This file records important changes and modifications to the codebase

2024-08-XX: Alpha version launched. Moved pre-alpha history to archive directory.
Modified success flash sequence in BorderedMainWidget to have 4 steps instead of 6 steps.
Modified BorderedMainWidget to use random colors from the red palette for error flashes instead of always using the first color.
Modified success flash in BorderedMainWidget to show four random green colors in a row instead of alternating green and black
Added reset_simulation call to ensure consistent initial conditions when loading scenarios
Fixed project loading from title screen to ensure simulator fully initializes before loading scenario file
Added StartupSequence class and framework for custom animation sequence on new project startup
Moved welcome text initialization into the StartupSequence for better timing control
Fixed bug where startup sequence was garbage collected before welcome text was displayed
Improved load transition to use a stored timer object, preventing potential garbage collection issues
Added 1000ms delay between startup flash and welcome text in StartupSequence.run() using QTimer.singleShot()
Added component buttons flashing animation to StartupSequence with alternating normal/hover states at 250ms intervals
Added time slider animation to StartupSequence that slides from min to max and back over 4 seconds total
Added README.txt to root directory for alpha users.
Changed view toggle hotkey from Tab to Backslash (\\) due to Windows compilation bug.
Added more detail to README.txt regarding panels, views, Autocomplete, CAPEX/IRR, and hotkeys.

2024-09-10: Reformatted README.txt with emojis, sections, and improved readability
2024-09-12: Modified GitHub Actions workflows to include readme.txt in both macOS and Windows build artifacts
Fixed macOS build workflow by replacing problematic ditto command with zip command to properly handle multiple files in archive
2024-09-15: Refactored properties_manager.py to extract _add_bus_properties to separate file for better code organization
2024-09-15: Refactored properties_manager.py to extract _add_generator_properties to separate file for better code organization
2024-09-15: Refactored properties_manager.py to extract _add_grid_import_properties to separate file for better code organization
Extracted grid_export_properties logic from properties_manager.py to dedicated file in ui/component_properties/ for better code organization.
Extracted battery_properties.py from properties_manager.py to improve code organization and maintainability.
Extracted _add_cloud_workload_properties method from properties_manager.py into cloud_workload_properties.py to improve code organization.
Extracted _add_solar_panel_properties from properties_manager.py to solar_panel_properties.py to improve modularity
Added animated hexagonal status jewel to ComponentBase that syncs with BorderedMainWidget animations, showing component states
Enhanced component status jewels to display synchronized rotational gradient animation matching the BorderedMainWidget
Updated gas generator button to use icon image and added tooltip with global tooltip styles.
Added Terminal widget to component dock for displaying application status messages in a terminal-like interface.
Added component addition logging to Terminal widget, showing component type and ID when components are added to the scene.
Modified simulation_controller.py to log connectivity errors to terminal and trigger error flash instead of showing QMessageBox.
Modified main_window.py and autocomplete_manager.py to use terminal logging instead of QMessageBox for network connectivity errors.
Added terminal log messages to simulation_controller.py to indicate when simulation starts and pauses, improving user feedback.
Replaced QMessageBox popups with TerminalWidget.log messages in load_properties.py for a more integrated UI experience.
Updated startup_sequence.py to display BIOS startup message in terminal widget instead of console print statement.
Added "Initializing watt-bit components" terminal log message when component buttons animation starts in StartupSequence.
2024-09-15: Fixed bug where generators in maintenance mode could still charge batteries if auto-charging was enabled, causing incorrect system stabilization.
Changed terminal_widget.py fixed-width font from "Courier" to "Menlo" to resolve Qt font warning.
Updated terminal_widget.py to use cross-platform font fallbacks (Menlo, Consolas, Courier, monospace) for compatibility across operating systems.
Added 1px gray border to component standard text boxes with same transparency as background for improved visual definition.
Modified ComponentBase to display revenue in green and cost in red with colors matching IRR display palette for visual consistency.
Modified ComponentBase to hide standard text box for decorative components (trees, bushes, pond, houses, factory, data center, poles).
Implemented icon state changes for time dock buttons (play, reset, screenshot, autocomplete) to lighten on hover and darken when pressed.
Modified main_window.py to import opaque_button_style from ui_initializer instead of duplicating the button style definition, improving maintainability.
Moved opaque_button_style from UIInitializer.initialize_ui method to module level in ui_initializer.py to make it properly importable by other modules.
Replaced static image in AugurTitleScreen with video player that displays titlevideo2.mp4 at 1600x900 pixels for 5 seconds before transitioning.
Enhanced AugurTitleScreen to use QGraphicsScene with logo overlay - added augurvibelogosmall.png at 300px width in bottom left corner over video.
Centered augurvibelogosmall.png logo on AugurTitleScreen and increased width from 300px to 700px for better visibility.
Updated play/pause button to use dedicated hover and press state images (playpausebuttonhover.png, playpausebuttonpress.png) instead of auto-generated states.
Updated reset, screenshot, and autocomplete buttons to use dedicated hover and press state images instead of auto-generated states.
Removed unused _create_lighter_pixmap and _create_darker_pixmap methods from IconStateButton class, simplifying the code since all buttons now use dedicated images.
Added black mask overlay to AugurTitleScreen that covers the entire video and logo area (1600x900) positioned on top of all other elements.
Added fade animation to AugurTitleScreen black mask using QTimer-based approach - fades from opaque to transparent over 250ms when video starts playing.
Fixed AugurTitleScreen layering by setting explicit Z-values: video (0), logo (1), black mask (2) to ensure mask appears on top of all elements.
Added fade-to-black animation in AugurTitleScreen that triggers at 9 seconds and fades the mask back to fully opaque over 1 second before transition.
Updated component indicators to use 3px rounded corners - modified battery, grid export, grid import, solar panel, wind turbine, and load components.
Added SelectedComponentDisplay widget to analytics container - 250x25px rounded rectangle with properties panel styling, positioned left of analytics button.
Fixed analytics container positioning in main_window.py resize handler to match ui_initializer.py (-340px from right edge).
Implemented selected component display logic - shows "no component selected" by default, updates to show component type + ID when selected, clears on deselection.
Updated selected component display text styling to match hover display colors - light gray (205,205,205) for component type, darker blue (80,150,225) for ID.
Resized SelectedComponentDisplay from 250px to 300px width and updated analytics container positioning from -340px to -390px to accommodate wider display.
Removed title bar from properties panel by replacing custom title bar widget with empty QWidget(), matching analytics and time controls panels.
Fixed properties panel width at 300px while keeping height dynamic by setting setFixedWidth(300) and setSizePolicy(Fixed, Preferred) on both dock and widget.
Changed properties panel positioning to fixed overlay system - panel positioned with right edge 90px from screen right and top edge 75px from screen top, repositions automatically on window resize like analytics container.
Fixed crash in properties_manager.py by removing call to deleted position_properties_panel_if_needed() method.
Added logic to startup_sequence.py to hide properties panel at the start of the startup sequence for a cleaner initial experience.
Fixed properties panel width bug by adding setFixedWidth(300) to properties_widget in properties_manager.py to prevent content from shrinking panel below 300px.
Modified grid import properties to move Load Profile button to separate line below dropdown selector, always visible but disabled unless Custom mode selected.
Enhanced Load Profile button styling to show grayed-out text when disabled for better visual feedback.
Updated grid import auto-charging button to use same styling as generator component with proper ON/OFF colors and hover states.
Applied same UI improvements to grid export properties - moved Load button to separate line, always visible but disabled when not Custom mode, with proper disabled styling.
Applied same UI improvements to wind turbine properties - moved Load Profile button to separate line, always visible but disabled when not Custom mode, with proper disabled styling.
Applied same UI improvements to solar panel properties - moved Load button to separate line, always visible but disabled when not Custom mode, with proper disabled styling.
Modified bus properties Load State button to grey out text color (#888888) when disabled due to no load connections for better visual feedback.
Modified generator properties to always show output level controls regardless of operating mode, with inactive controls being disabled/greyed out instead of hidden.
Enhanced generator properties ramp rate limiter to grey out label text when disabled for consistent visual feedback.
Modified load properties to always show all controls regardless of demand mode, with inactive controls being disabled/greyed out instead of hidden.
Modified load properties Load button to be on separate row instead of same line as demand mode dropdown, matching grid import component UI pattern.
Modified load properties time offset control to use slider and label only (removed text edit), matching frequency control pattern. Range changed to 0-8759.
Converted SelectedComponentDisplay from QLabel to QPushButton with hover/pressed styling matching component open buttons, making it clickable to open properties panel.
Added particle effect (create_puff with 200 particles) to component deletion in ComponentDeleter.delete_component(), matching the effect used when components are added.
Added CSV format popup dialog to properties_manager._load_custom_profile() - shows spreadsheet.png image (200x200px) and format requirements before file selector opens.
Added blue dot bullet (•) with color #4A90E2 to beginning of all terminal messages in TerminalWidget.add_message() for better visual organization.
Modified TerminalWidget.add_message() to skip adding blue dot for empty messages or line breaks, preventing unnecessary dots on blank lines.
Enhanced TerminalWidget.add_message() to show red dots for messages starting with "ERROR" (case-insensitive), blue dots for normal messages.
Added platform detection to AugurTitleScreen - Windows systems now play titlevideo6small_win.wmv instead of the default .mp4 file for better compatibility.
Modified AugurTitleScreen platform detection to default to Windows video file, only using macOS version on Darwin systems instead of defaulting to macOS for all non-Windows platforms.
2025-05-30: Fixed ui_initializer.py PyQt6 import error by moving QAction from QtWidgets to QtGui after migration script.
2025-05-30: Replaced deprecated QMediaContent usage in augur_title_screen.py with QMediaPlayer.setSource() under PyQt6.
2025-05-30: Updated QSizePolicy enum usage to QSizePolicy.Policy.* across multiple files for PyQt6 compatibility.
2025-05-30: Replaced Qt.ScrollBarAlwaysOff with Qt.ScrollBarPolicy.ScrollBarAlwaysOff across UI files for PyQt6 enums.
2025-05-30: Updated QFrame.HLine/Sunken to QFrame.Shape.HLine and QFrame.Shadow.Sunken for PyQt6 in historian_manager.py.
2025-05-30: Replaced Qt.WA_TransparentForMouseEvents with Qt.WidgetAttribute.WA_TransparentForMouseEvents.
2025-05-30: Updated Qt corner enums to Qt.Corner.* in ui_initializer.py for PyQt6.
2025-05-30: Updated QGraphicsView drag enums to QGraphicsView.DragMode.* for PyQt6.
2025-05-30: Replaced QPainter.Antialiasing/SmoothPixmapTransform with QPainter.RenderHint.* across files.
2025-05-30: Updated QGraphicsView.FullViewportUpdate to QGraphicsView.ViewportUpdateMode.FullViewportUpdate.
2025-05-30: Replaced Qt.StrongFocus/NoFocus with Qt.FocusPolicy.* enums.
2025-05-30: Replaced event.KeyPress/MouseMove with QEvent.Type.* and imported QEvent in main_window.py and key_handler.py.
2025-05-30: Updated RichText enums in autocomplete_manager to Qt.TextFormat.RichText.
2025-05-30: Updated QDockWidget.NoDockWidgetFeatures to QDockWidget.DockWidgetFeature.NoDockWidgetFeatures.
2025-05-30: Updated QToolButton.InstantPopup to QToolButton.ToolButtonPopupMode.InstantPopup.
2025-05-30: Replaced QApplication.desktop() with QGuiApplication.primaryScreen().availableGeometry() across title screens and main window.
2025-05-30: Updated Qt.FramelessWindowHint to Qt.WindowType.FramelessWindowHint in title screens.
2025-05-30: Updated cursor enums Qt.ArrowCursor/PointingHandCursor to Qt.CursorShape.* across multiple files.
2025-05-30: Removed QMediaPlayer.VideoSurface flag; constructed with QMediaPlayer() and setVideoOutput in augur_title_screen.
2025-05-30: Updated color & pen/brush enums to new Qt.GlobalColor and Qt.PenStyle/BrushStyle paths across many files for PyQt6.
2025-05-30: Replaced Qt.DirectConnection with Qt.ConnectionType.DirectConnection in main.py.
2025-05-30: Replaced Qt.Key.* constants with Qt.Key.Key_* across key handlers and title screens for PyQt6.
2025-05-30: Updated Qt.IntersectClip -> Qt.ClipOperation.IntersectClip and Qt.transparent -> Qt.GlobalColor.transparent in bordered_main_widget.py.
2025-05-30: Replaced Qt.transparent usages with Qt.GlobalColor.transparent in particle_system and screenshot_manager; connection_manager cursor pixmap.
2025-05-30: Replaced deprecated QFontMetrics.width with horizontalAdvance in gradient_border_text.py.
2025-05-30: Updated QGraphicsRectItem item flag/changes to QGraphicsItem.GraphicsItemFlag and GraphicsItemChange in base.py.
2025-05-30: Replaced remaining Qt.NoPen with Qt.PenStyle.NoPen in decorative component files.
2025-05-30: Fixed QMessageBox button constants in main_window.py closeEvent - replaced QMessageBox.Yes/No/Cancel with QMessageBox.StandardButton.* for PyQt6.
2025-05-30: Fixed QDialog.Accepted constant in properties_manager.py - replaced with QDialog.DialogCode.Accepted for PyQt6.
2025-01-05: Added ffmpeg_utils.py module with binary path resolution for compiled applications - includes get_ffmpeg_path(), get_ffprobe_path(), and setup_ffmpeg_environment() functions.
2025-01-05: Updated AugurTitleScreen and main.py to use ffmpeg_utils.setup_ffmpeg_environment() for proper video playback in PyInstaller compiled applications.
2025-01-05: Fixed Windows build workflow FFmpeg detection - added robust binary location step with debugging output and dynamic path resolution to handle variable FFmpeg archive structures.
2025-01-05: Added audio_utils.py module with AudioPlayer class for progressive audio functionality - includes play, stop, pause controls and proper resource management using PyQt6 QMediaPlayer.
2025-01-05: Integrated TheAdventureBEGINS.wav audio playback with AugurTitleScreen lifecycle - audio starts on screen display and stops on all transition methods (key press, auto-transition, button clicks).
2025-01-05: Enhanced audio system for continuous playbook - audio now plays through Augur → WBR → main title screen sequence without interruption, with looping enabled on the main title screen.
2025-01-05: Added sound effects to title screen buttons - buttonhover.wav plays on hover for all three buttons (exit, new project, load project), buttonclick.wav plays on Load Project button click only, using separate AudioPlayer instance to avoid interrupting background music.
2025-08-06: Implemented play_sound_effect utility for concurrent SFX; StartupSequence plays startup1of3.wav during button hover flashes.
2025-08-06: Added placecomponent.wav sound effect to startup sequence - plays when welcome text is displayed in add_welcome_text method of main_window.py.
2025-08-06: Added startup2of3.wav sound effect at 1000ms (concurrent with time slider animation) and startup3of3.wav at 2000ms to startup sequence.
