# ALPHA VERSION HISTORY
# ==================
# This file records important changes and modifications to the codebase

2024-08-XX: Alpha version launched. Moved pre-alpha history to archive directory.
Modified success flash sequence in BorderedMainWidget to have 4 steps instead of 6 steps.
Modified BorderedMainWidget to use random colors from the red palette for error flashes instead of always using the first color.
Modified success flash in BorderedMainWidget to show four random green colors in a row instead of alternating green and black
Added reset_simulation call to ensure consistent initial conditions when loading scenarios
Fixed project loading from title screen to ensure simulator fully initializes before loading scenario file
Added StartupSequence class and framework for custom animation sequence on new project startup
Moved welcome text initialization into the StartupSequence for better timing control
Fixed bug where startup sequence was garbage collected before welcome text was displayed
Improved load transition to use a stored timer object, preventing potential garbage collection issues
Added 1000ms delay between startup flash and welcome text in StartupSequence.run() using QTimer.singleShot()
Added component buttons flashing animation to StartupSequence with alternating normal/hover states at 250ms intervals
Added time slider animation to StartupSequence that slides from min to max and back over 4 seconds total
Added README.txt to root directory for alpha users.
Changed view toggle hotkey from Tab to Backslash (\\) due to Windows compilation bug.
Added more detail to README.txt regarding panels, views, Autocomplete, CAPEX/IRR, and hotkeys.

2024-09-10: Reformatted README.txt with emojis, sections, and improved readability
2024-09-12: Modified GitHub Actions workflows to include readme.txt in both macOS and Windows build artifacts
Fixed macOS build workflow by replacing problematic ditto command with zip command to properly handle multiple files in archive
2024-09-15: Refactored properties_manager.py to extract _add_bus_properties to separate file for better code organization
2024-09-15: Refactored properties_manager.py to extract _add_generator_properties to separate file for better code organization
2024-09-15: Refactored properties_manager.py to extract _add_grid_import_properties to separate file for better code organization
Extracted grid_export_properties logic from properties_manager.py to dedicated file in ui/component_properties/ for better code organization.
Extracted battery_properties.py from properties_manager.py to improve code organization and maintainability.
Extracted _add_cloud_workload_properties method from properties_manager.py into cloud_workload_properties.py to improve code organization.
Extracted _add_solar_panel_properties from properties_manager.py to solar_panel_properties.py to improve modularity
Added animated hexagonal status jewel to ComponentBase that syncs with BorderedMainWidget animations, showing component states
Enhanced component status jewels to display synchronized rotational gradient animation matching the BorderedMainWidget
Updated gas generator button to use icon image and added tooltip with global tooltip styles.
Added Terminal widget to component dock for displaying application status messages in a terminal-like interface.
Added component addition logging to Terminal widget, showing component type and ID when components are added to the scene.
Modified simulation_controller.py to log connectivity errors to terminal and trigger error flash instead of showing QMessageBox.
Modified main_window.py and autocomplete_manager.py to use terminal logging instead of QMessageBox for network connectivity errors.
Added terminal log messages to simulation_controller.py to indicate when simulation starts and pauses, improving user feedback.
Replaced QMessageBox popups with TerminalWidget.log messages in load_properties.py for a more integrated UI experience.
Updated startup_sequence.py to display BIOS startup message in terminal widget instead of console print statement.
Added "Initializing watt-bit components" terminal log message when component buttons animation starts in StartupSequence.
2024-09-15: Fixed bug where generators in maintenance mode could still charge batteries if auto-charging was enabled, causing incorrect system stabilization.
Changed terminal_widget.py fixed-width font from "Courier" to "Menlo" to resolve Qt font warning.
Updated terminal_widget.py to use cross-platform font fallbacks (Menlo, Consolas, Courier, monospace) for compatibility across operating systems.
Added 1px gray border to component standard text boxes with same transparency as background for improved visual definition.
Modified ComponentBase to display revenue in green and cost in red with colors matching IRR display palette for visual consistency.
Modified ComponentBase to hide standard text box for decorative components (trees, bushes, pond, houses, factory, data center, poles).
Implemented icon state changes for time dock buttons (play, reset, screenshot, autocomplete) to lighten on hover and darken when pressed.
Modified main_window.py to import opaque_button_style from ui_initializer instead of duplicating the button style definition, improving maintainability.
Moved opaque_button_style from UIInitializer.initialize_ui method to module level in ui_initializer.py to make it properly importable by other modules.
Replaced static image in AugurTitleScreen with video player that displays titlevideo2.mp4 at 1600x900 pixels for 5 seconds before transitioning.
Enhanced AugurTitleScreen to use QGraphicsScene with logo overlay - added augurvibelogosmall.png at 300px width in bottom left corner over video.
Centered augurvibelogosmall.png logo on AugurTitleScreen and increased width from 300px to 700px for better visibility.
Updated play/pause button to use dedicated hover and press state images (playpausebuttonhover.png, playpausebuttonpress.png) instead of auto-generated states.
Updated reset, screenshot, and autocomplete buttons to use dedicated hover and press state images instead of auto-generated states.
Removed unused _create_lighter_pixmap and _create_darker_pixmap methods from IconStateButton class, simplifying the code since all buttons now use dedicated images.
Added black mask overlay to AugurTitleScreen that covers the entire video and logo area (1600x900) positioned on top of all other elements.
Added fade animation to AugurTitleScreen black mask using QTimer-based approach - fades from opaque to transparent over 250ms when video starts playing.
Fixed AugurTitleScreen layering by setting explicit Z-values: video (0), logo (1), black mask (2) to ensure mask appears on top of all elements.
